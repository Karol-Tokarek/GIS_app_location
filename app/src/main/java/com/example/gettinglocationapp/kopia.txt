package com.example.gettinglocationapp;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;

import android.Manifest;
import android.annotation.SuppressLint;
import android.content.Context;
import android.content.pm.PackageManager;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.TextView;
import android.widget.Toast;

import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.api.Api;
import com.google.android.gms.common.api.GoogleApiClient;
import com.google.android.gms.common.api.internal.ApiKey;
import com.google.android.gms.location.FusedLocationProviderClient;
import com.google.android.gms.location.LocationServices;
import com.google.android.gms.maps.CameraUpdate;
import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.LocationSource;
import com.google.android.gms.maps.OnMapReadyCallback;
import com.google.android.gms.maps.SupportMapFragment;
import com.google.android.gms.maps.model.BitmapDescriptorFactory;
import com.google.android.gms.maps.model.CameraPosition;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.MarkerOptions;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.android.gms.tasks.Task;
import com.google.android.material.floatingactionbutton.FloatingActionButton;

public class ShowMap extends AppCompatActivity implements OnMapReadyCallback, GoogleApiClient.ConnectionCallbacks, GoogleApiClient.OnConnectionFailedListener, LocationSource {

    boolean isPermissionGranted;
    FloatingActionButton floatingbtn;
    public double lang;
    public double lat;
    GoogleMap mGoogleMap;
    GoogleApiClient mGoogleApiClient;
    public LocationManager loc;


    private FusedLocationProviderClient mLocationClient;


    private void checkMyPermission() {

        if (checkSelfPermission(android.Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED &&
                checkSelfPermission(Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
            requestPermissions(new String[]{android.Manifest.permission.ACCESS_FINE_LOCATION}, 0);
        }
        return;  /////pobieranie permisji (komunikat czy dajesz permisje aplikacji)

    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        setContentView(R.layout.activity_show_map);
//        checkMyPermission();
//        zaladujMape();
        checkMyPermission();
        loc = (LocationManager)getSystemService(Context.LOCATION_SERVICE);

        // loc = (LocationManager) getSystemService(Context.LOCATION_SERVICE);
        mLocationClient = LocationServices.getFusedLocationProviderClient(this);
        if (isPermissionGranted) {
            SupportMapFragment suppMapFragment = (SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.map);
            suppMapFragment.getMapAsync(new OnMapReadyCallback() {
                @Override
                public void onMapReady(GoogleMap googleMap) {
                    mGoogleMap = googleMap;
                    mGoogleApiClient.connect();
                }
            });
        }

//        LocationListener listener = new LocationListener() {
//            @Override
//            public void onLocationChanged(@NonNull Location location) {
//                double width = Double.parseDouble(String.valueOf(location.getLatitude()));
//                double height = Double.parseDouble(String.valueOf(location.getLongitude()));
//                lat = width;
//                lang = height;
//            }
//
//        };


        floatingbtn = (FloatingActionButton) findViewById(R.id.floatingActionButton);


        floatingbtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                LatLng latLng = new LatLng(52.095713, 17.728129);
                mGoogleMap.addMarker(new MarkerOptions().position(latLng).title("My Location"));
                mGoogleMap.moveCamera(CameraUpdateFactory.newLatLng(latLng));
                mGoogleMap.animateCamera(CameraUpdateFactory.zoomTo(20));
                LatLng Latlng = new LatLng(52.095713, 17.728129);

            }


        });
//
//
//    }
//
//    //@SuppressLint("MissingPermission")
//    private void zaladujMape() {
//        if (isPermissionGranted) {
//            SupportMapFragment suppMapFragment = (SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.map);
//            suppMapFragment.getMapAsync(this);
//        }
//
//
//    }
//

//
//    public void list() {
//
//        LocationListener listener = new LocationListener() {
//
//            @Override
//            public void onLocationChanged(@NonNull Location location) {
//
//                String width = String.valueOf(location.getLatitude());
//                String height = String.valueOf(location.getLongitude());
//                double he = Double.parseDouble(height);
//                double wi = Double.parseDouble(width);
//                lang = wi;
//                lat = he;
//
//                IdzDoLokacji(he, wi);
//
//
//            }
//
//        };
//    }
//
//    @SuppressLint("MissingPermission")
//    private void PobierzLokalizacje() {
//
////        mLocationClient.getLastLocation().addOnCompleteListener(this, location ->
////        {
////            if(location != null)
////            {
////
////            }
////
////
////        });
//
//
//    }
//
//    @SuppressLint("MissingPermission")
//    private void IdzDoLokacji(double latitude, double longitude) {
//
//        LatLng Latlng = new LatLng(52.095713, 17.728129);
//        CameraUpdate cameraUpdate = CameraUpdateFactory.newLatLngZoom(Latlng, 17);
//        mGoogleMap.moveCamera(cameraUpdate);
//        mGoogleMap.setMapType(GoogleMap.MAP_TYPE_NORMAL);
//
//
//    }
    }
    @SuppressLint("MissingPermission")
    @Override
    public void onMapReady(@NonNull GoogleMap googleMap) {
       // LatLng Latlng = new LatLng(52.095713, 17.728129);

        mGoogleMap = googleMap;
       // googleMap.setLocationSource(this);
        mGoogleMap.setMyLocationEnabled(true);
        mGoogleMap.getUiSettings().setZoomControlsEnabled(true);
        mGoogleMap.getUiSettings().setCompassEnabled(true);







        }



    public void onMapLongClick(LatLng point) {
//        mGoogleMap
//        if(mGoogleMap != null){
//            mGoogleMap.addMarker(new MarkerOptions()
//                    .position(point)
//                    .title("You are here")
//                    .icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_RED)));
//        }
    }

    @Override
    public void onPointerCaptureChanged(boolean hasCapture) {


        super.onPointerCaptureChanged(hasCapture);
       // IdzDoLokacji(49.0002, 54.020);

    }

    @Override
    public void onConnected(@Nullable Bundle bundle) {

    }



    @Override
    public void onConnectionSuspended(int i) {

    }

    @Override
    public void onConnectionFailed(@NonNull ConnectionResult connectionResult) {

    }

    @Override
    public void activate(@NonNull OnLocationChangedListener onLocationChangedListener) {

    }

    @Override
    public void deactivate() {

    }
}
